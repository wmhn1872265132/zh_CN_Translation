name: Automatically update NVDA.po

on:
  push:
    branches:
      - "20*"
    paths:
      - 'Translation/LC_MESSAGES/*.po'
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.repository }}
  cancel-in-progress: true

jobs:
  Check-NVDA-Repository-Update:
    name: Check NVDA repository update
    runs-on: ubuntu-latest
    outputs:
      has_update: ${{ steps.check_update.outputs.has_update }}
    steps:
      - name: Get current SHA
        id: get_current_sha
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          response=$(curl -sf -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/nvaccess/nvda/branches/master)
          current_sha=$(echo "$response" | jq -r '.commit.sha')
          echo "current_sha=$current_sha" >> $GITHUB_OUTPUT
          echo "CACHE_KEY=nvda-sha-$current_sha" >> $GITHUB_ENV
      - name: Check SHA cache
        id: cache_sha
        uses: actions/cache@v4
        with:
          path: .sha_cache
          key: ${{ env.CACHE_KEY }}
          lookup-only: true
      - name: Determine update status
        id: check_update
        run: |
          if [[ "${{ steps.cache_sha.outputs.cache-hit }}" == 'true' ]]; then
            echo "Cache hit, no updates."
            echo "has_update=false" >> $GITHUB_OUTPUT
          else
            echo "Cache miss, new updates."
            echo "has_update=true" >> $GITHUB_OUTPUT
            mkdir -p .sha_cache
            echo "${{ steps.get_current_sha.outputs.current_sha }}" > .sha_cache/latest_sha
            echo "Cached SHA: $(cat .sha_cache/latest_sha)"
          fi

  Update-NVDA-po:
    name: Automatically update NVDA.po
    needs: Check-NVDA-Repository-Update
    if: ${{ needs.Check-NVDA-Repository-Update.outputs.has_update == 'true' }}
    runs-on: windows-latest
    steps:
      - name: Checkout ${{ github.repository }} repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install dependencies
        uses: ./.github/workflows/InstallDependencies
        with:
          ref: master
          submodules: true
          Download-gettext: true
      - name: Configure environment
        id: Set_Environment_Variables
        shell: pwsh
        run: |
          cd "${{ github.workspace }}/Tools/NVDA"
          $commit = (git rev-parse HEAD).Substring(0,8)
          echo "commit=$commit" >> $env:GITHUB_OUTPUT
          cd "${{ github.workspace }}"
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          $versionFile = "${{ github.workspace }}/Tools/NVDA/source/buildVersion.py"
          $versionYear = (Select-String -Path $versionFile -Pattern 'version_year\s*=\s*(\d+)').Matches.Groups[1].Value
          $versionMajor = (Select-String -Path $versionFile -Pattern 'version_major\s*=\s*(\d+)').Matches.Groups[1].Value
          $branchName = "$versionYear.$versionMajor"
          echo "Branch=$branchName" >> $env:GITHUB_OUTPUT
          if ($branchName -ne "${{ github.ref_name }}") {
              git ls-remote --exit-code --heads origin "$branchName"
              if ($LASTEXITCODE -eq 0) {
                  Write-Output "Branch $branchName exists. Checking out..."
                  git checkout -b $branchName remotes/origin/$branchName
              } else {
                  Write-Output "Branch $branchName does not exist. Creating from Uploads..."
                  git checkout -b $branchName remotes/origin/Uploads
              }
          } else {
              Write-Output "Branch name is ${{ github.ref_name }}. Skipping switch branch."
          }
          &"${{ github.workspace }}\Tools\7Zip\7z.exe" e "${{ github.workspace }}\Crowdin\Temp\gettext.zip" "bin\msgmerge.exe" -aoa -o"${{ github.workspace }}\Tools"
      - name: CheckPot
        shell: cmd
        run: |
          cd /d ${{ github.workspace }}\Tools\NVDA
          scons checkPot --all-cores
      - name: Update NVDA.po
        shell: pwsh
        run: |
          &"${{ github.workspace }}\Tools\msgmerge.exe" --update  --backup=none --previous "${{ github.workspace }}\Translation\LC_MESSAGES\nvda.po" "${{ github.workspace }}\Tools\NVDA\output\nvda.pot"
          git add "Translation/LC_MESSAGES/nvda.po"
          git diff --cached --quiet
          if ($LASTEXITCODE -ne 0) {
              git commit -m "更新界面消息翻译字符串（alpha-${{ steps.Set_Environment_Variables.outputs.commit }}）"
              git push origin ${{ steps.Set_Environment_Variables.outputs.Branch }}:${{ steps.Set_Environment_Variables.outputs.Branch }}
          } else {
              Write-Host "No changes to commit, skipping commit and push."
          }
      - name: Upload Output
        uses: actions/upload-artifact@v4
        with:
          name: NVDA.pot
          path: ${{ github.workspace }}/Tools/NVDA/output/*
